# dune fmt
# OCAMLPARAM: unset
# Shared cache: disabled
# Workspace root: /Users/aryan/Developer/playground/ocaml-pub-sub-1/midiClient
# Auto-detected concurrency: 10
$ /Users/aryan/.opam/cardioproj/bin/ocamlc.opt -config > /var/folders/tq/9l9tk0xj3kb8h21rx7bj6kmw0000gn/T/dune_f00c86_output
# Dune context:
#  { name = "default"
#  ; kind = "default"
#  ; profile = Dev
#  ; merlin = true
#  ; for_host = None
#  ; fdo_target_exe = None
#  ; build_dir = In_build_dir "default"
#  ; ocaml_bin = External "/Users/aryan/.opam/cardioproj/bin"
#  ; ocaml = Ok External "/Users/aryan/.opam/cardioproj/bin/ocaml"
#  ; ocamlc = External "/Users/aryan/.opam/cardioproj/bin/ocamlc.opt"
#  ; ocamlopt = Ok External "/Users/aryan/.opam/cardioproj/bin/ocamlopt.opt"
#  ; ocamldep = Ok External "/Users/aryan/.opam/cardioproj/bin/ocamldep.opt"
#  ; ocamlmklib =
#      Ok External "/Users/aryan/.opam/cardioproj/bin/ocamlmklib.opt"
#  ; env =
#      map
#        { "DUNE_OCAML_HARDCODED" :
#            "/Users/aryan/.opam/cardioproj/lib/ocaml:/Users/aryan/.opam/cardioproj/lib"
#        ; "DUNE_OCAML_STDLIB" : "/Users/aryan/.opam/cardioproj/lib/ocaml"
#        ; "DUNE_SOURCEROOT" :
#            "/Users/aryan/Developer/playground/ocaml-pub-sub-1/midiClient"
#        ; "INSIDE_DUNE" :
#            "/Users/aryan/Developer/playground/ocaml-pub-sub-1/midiClient/_build/default"
#        ; "OCAMLFIND_IGNORE_DUPS_IN" :
#            "/Users/aryan/Developer/playground/ocaml-pub-sub-1/midiClient/_build/install/default/lib"
#        ; "OCAMLPATH" :
#            "/Users/aryan/Developer/playground/ocaml-pub-sub-1/midiClient/_build/install/default/lib"
#        ; "OCAMLTOP_INCLUDE_PATH" :
#            "/Users/aryan/Developer/playground/ocaml-pub-sub-1/midiClient/_build/install/default/lib/toplevel"
#        ; "OCAML_COLOR" : "always"
#        ; "OPAMCOLOR" : "always"
#        }
#  ; findlib_paths =
#      [ External "/Users/aryan/.opam/cardioproj/lib/ocaml"
#      ; External "/Users/aryan/.opam/cardioproj/lib"
#      ]
#  ; natdynlink_supported = true
#  ; supports_shared_libraries = true
#  ; ocaml_config =
#      { version = "5.0.0"
#      ; standard_library_default = "/Users/aryan/.opam/cardioproj/lib/ocaml"
#      ; standard_library = "/Users/aryan/.opam/cardioproj/lib/ocaml"
#      ; standard_runtime = "the_standard_runtime_variable_was_deleted"
#      ; ccomp_type = "cc"
#      ; c_compiler = "cc"
#      ; ocamlc_cflags =
#          [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-pthread" ]
#      ; ocamlc_cppflags = [ "-D_FILE_OFFSET_BITS=64" ]
#      ; ocamlopt_cflags =
#          [ "-O2"; "-fno-strict-aliasing"; "-fwrapv"; "-pthread" ]
#      ; ocamlopt_cppflags = [ "-D_FILE_OFFSET_BITS=64" ]
#      ; bytecomp_c_compiler =
#          [ "cc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-pthread"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ]
#      ; bytecomp_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_c_compiler =
#          [ "cc"
#          ; "-O2"
#          ; "-fno-strict-aliasing"
#          ; "-fwrapv"
#          ; "-pthread"
#          ; "-D_FILE_OFFSET_BITS=64"
#          ]
#      ; native_c_libraries = [ "-lm"; "-lpthread" ]
#      ; native_pack_linker = [ "ld"; "-r"; "-o" ]
#      ; cc_profile = []
#      ; architecture = "arm64"
#      ; model = "default"
#      ; int_size = 63
#      ; word_size = 64
#      ; system = "macosx"
#      ; asm = [ "cc"; "-c"; "-Wno-trigraphs" ]
#      ; asm_cfi_supported = true
#      ; with_frame_pointers = false
#      ; ext_exe = ""
#      ; ext_obj = ".o"
#      ; ext_asm = ".s"
#      ; ext_lib = ".a"
#      ; ext_dll = ".so"
#      ; os_type = "Unix"
#      ; default_executable_name = "a.out"
#      ; systhread_supported = true
#      ; host = "aarch64-apple-darwin22.5.0"
#      ; target = "aarch64-apple-darwin22.5.0"
#      ; profiling = false
#      ; flambda = false
#      ; spacetime = false
#      ; safe_string = true
#      ; exec_magic_number = "Caml1999X032"
#      ; cmi_magic_number = "Caml1999I032"
#      ; cmo_magic_number = "Caml1999O032"
#      ; cma_magic_number = "Caml1999A032"
#      ; cmx_magic_number = "Caml1999Y032"
#      ; cmxa_magic_number = "Caml1999Z032"
#      ; ast_impl_magic_number = "Caml1999M032"
#      ; ast_intf_magic_number = "Caml1999N032"
#      ; cmxs_magic_number = "Caml1999D032"
#      ; cmt_magic_number = "Caml1999T032"
#      ; natdynlink_supported = true
#      ; supports_shared_libraries = true
#      ; windows_unicode = false
#      }
#  }
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/test/cardio_crumble.ml) > _build/default/cardio-folder/test/.formatted/cardio_crumble.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl test/midiClient.ml) > _build/default/test/.formatted/midiClient.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/event.ml) > _build/default/cardio-folder/bin/.formatted/event.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/import.ml) > _build/default/cardio-folder/bin/.formatted/import.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/main.ml) > _build/default/cardio-folder/bin/.formatted/main.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/list_devices.ml) > _build/default/cardio-folder/bin/.formatted/list_devices.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --intf cardio-folder/bin/midi.mli) > _build/default/cardio-folder/bin/.formatted/midi.mli
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/play.ml) > _build/default/cardio-folder/bin/.formatted/play.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/midi.ml) > _build/default/cardio-folder/bin/.formatted/midi.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/util.ml) > _build/default/cardio-folder/bin/.formatted/util.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/simple_engine.ml) > _build/default/cardio-folder/bin/.formatted/simple_engine.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/watchdog.ml) > _build/default/cardio-folder/bin/.formatted/watchdog.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl cardio-folder/bin/stat_engine.ml) > _build/default/cardio-folder/bin/.formatted/stat_engine.ml
$ /opt/homebrew/bin/git --no-pager diff --no-index --color=always -u _build/default/bin/dune _build/default/bin/.formatted/dune
> diff --git a/_build/default/bin/dune b/_build/default/bin/.formatted/dune
> index 2c66f17..4cf0523 100644
> --- a/_build/default/bin/dune
> +++ b/_build/default/bin/.formatted/dune
> @@ -1,9 +1,9 @@
>  (executable
>   (public_name midiClient)
>   (name main)
> - (libraries 
> - midiClient
> - cmdliner
> + (libraries
> +  midiClient
> +  cmdliner
>    logs
>    portmidi
>    runtime_events
> @@ -13,4 +13,3 @@
>    str
>    lwt.unix
>    unix))
> -
[1]
$ /opt/homebrew/bin/git --no-pager diff --no-index --color=always -u _build/default/cardio-folder/bin/simple_engine.ml _build/default/cardio-folder/bin/.formatted/simple_engine.ml
> diff --git a/_build/default/cardio-folder/bin/simple_engine.ml b/_build/default/cardio-folder/bin/.formatted/simple_engine.ml
> index d79a8a3..6ce0781 100644
> --- a/_build/default/cardio-folder/bin/simple_engine.ml
> +++ b/_build/default/cardio-folder/bin/.formatted/simple_engine.ml
> @@ -54,7 +54,7 @@ let tracing device child_alive path_pid tones =
>    let runtime_end = runtime_end device tones in
>    let runtime_counter = runtime_counter device tones in
>    let cbs = Callbacks.create ~runtime_begin ~runtime_end ~runtime_counter () in
> -  let watchdog_domain = Domain.spawn (Watchdog.watchdog_func child_alive)  in
> +  let watchdog_domain = Domain.spawn (Watchdog.watchdog_func child_alive) in
>    while not (Atomic.get Watchdog.terminate) do
>      ignore (read_poll c cbs None);
>      Unix.sleepf 0.1
[1]
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --intf bin/list_devices.mli) > _build/default/bin/.formatted/list_devices.mli
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl bin/list_devices.ml) > _build/default/bin/.formatted/list_devices.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl bin/main.ml) > _build/default/bin/.formatted/main.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --intf bin/midi.mli) > _build/default/bin/.formatted/midi.mli
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl bin/midi.ml) > _build/default/bin/.formatted/midi.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl bin/midi_util.ml) > _build/default/bin/.formatted/midi_util.ml
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --intf bin/midi_util.mli) > _build/default/bin/.formatted/midi_util.mli
$ /opt/homebrew/bin/git --no-pager diff --no-index --color=always -u _build/default/cardio-folder/bin/watchdog.ml _build/default/cardio-folder/bin/.formatted/watchdog.ml
> diff --git a/_build/default/cardio-folder/bin/watchdog.ml b/_build/default/cardio-folder/bin/.formatted/watchdog.ml
> index c16ede7..16213f7 100644
> --- a/_build/default/cardio-folder/bin/watchdog.ml
> +++ b/_build/default/cardio-folder/bin/.formatted/watchdog.ml
> @@ -13,4 +13,4 @@ let rec watchdog_func child_alive () =
>    | true -> ()
>    | false ->
>        if not (child_alive ()) then Atomic.set terminate true
> -      else watchdog_func child_alive () 
> +      else watchdog_func child_alive ()
[1]
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl bin/play.ml) > _build/default/bin/.formatted/play.ml
$ /opt/homebrew/bin/git --no-pager diff --no-index --color=always -u _build/default/cardio-folder/bin/stat_engine.ml _build/default/cardio-folder/bin/.formatted/stat_engine.ml
> diff --git a/_build/default/cardio-folder/bin/stat_engine.ml b/_build/default/cardio-folder/bin/.formatted/stat_engine.ml
> index ea4062e..e4a8b3a 100644
> --- a/_build/default/cardio-folder/bin/stat_engine.ml
> +++ b/_build/default/cardio-folder/bin/.formatted/stat_engine.ml
> @@ -108,10 +108,8 @@ let rec sequencer_main_func num_beats tones device bpm _ =
>    Hashtbl.clear event_table;
>    Mutex.unlock event_table_lock;
>    (* Unix.sleepf (60. /. Float.of_int bpm); *)
> -  if Atomic.get Watchdog.terminate then
> -    ()
> -  else
> -    sequencer_main_func (num_beats + 1) tones device bpm ()
> +  if Atomic.get Watchdog.terminate then ()
> +  else sequencer_main_func (num_beats + 1) tones device bpm ()
>  
>  let tracing (bpm : int) device child_alive path_pid tones =
>    let polling_domain = Domain.spawn (polling_main_func path_pid) in
[1]
$ (cd _build/default && /Users/aryan/.opam/cardioproj/bin/ocamlformat --impl bin/udpClient.ml) > _build/default/bin/.formatted/udpClient.ml
$ /opt/homebrew/bin/git --no-pager diff --no-index --color=always -u _build/default/bin/udpClient.ml _build/default/bin/.formatted/udpClient.ml
> diff --git a/_build/default/bin/udpClient.ml b/_build/default/bin/.formatted/udpClient.ml
> index e01eac4..874580c 100644
> --- a/_build/default/bin/udpClient.ml
> +++ b/_build/default/bin/.formatted/udpClient.ml
> @@ -12,9 +12,10 @@ let rec handle_request server_socket =
>    server_socket >>= fun server_socket ->
>    (* Wait for promise server_socket to resolve, and then use its value *)
>    print_endline "Ready to send request";
> -  Logs_lwt.info (fun m -> m "Enter the value you want to send to the UDP Server: ") >>= fun () ->
> +  Logs_lwt.info (fun m ->
> +      m "Enter the value you want to send to the UDP Server: ")
> +  >>= fun () ->
>    Lwt_io.read_line Lwt_io.stdin >>= fun userMsg ->
> -
>    Lwt_unix.sendto server_socket (Bytes.of_string userMsg) 0
>      (String.length userMsg) []
>      (ADDR_INET (listen_address, port))
[1]
